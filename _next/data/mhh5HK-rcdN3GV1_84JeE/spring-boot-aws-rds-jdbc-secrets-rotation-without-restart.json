{"pageProps":{"post":{"mdxSource":"var Component=(()=>{var d=Object.create;var c=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var r=n=>c(n,\"__esModule\",{value:!0});var g=(n,t)=>()=>(t||n((t={exports:{}}).exports,t),t.exports),N=(n,t)=>{r(n);for(var s in t)c(n,s,{get:t[s],enumerable:!0})},k=(n,t,s)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let a of p(t))!u.call(n,a)&&a!==\"default\"&&c(n,a,{get:()=>t[a],enumerable:!(s=h(t,a))||s.enumerable});return n},b=n=>k(r(c(n!=null?d(m(n)):{},\"default\",n&&n.__esModule&&\"default\"in n?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n);var l=g((A,o)=>{o.exports=_jsx_runtime});var v={};N(v,{default:()=>f,frontmatter:()=>w});var e=b(l()),w={title:\"Spring Boot: Handle AWS RDS JDBC password change or rotation without restarting\",author:\"Amrut Prabhu\",categories:\"\",tags:[\"AWS\",\"RDS\",\"Secrets manager\",\"Spring Boot\",\"Java\"],image:\"2020-11-05/aws-secrets-rotation.jpg\",\"photo-credits\":\"https://unsplash.com/photos/B_hAlVqataE\",\"applaud-link\":\"spring-boot-aws-rds-secrets-rotation.json\",date:\"2020-11-05\",draft:!1,summary:\"Here, we see how we can handle AWS RDS secrets rotation without restarting your Spring Boot application\",imageUrl:\"/static/images/2020/aws-secrets-rotation/cover.jpg\",actualUrl:\"auto-generated\",customUrl:\"auto-generated\"};function y(n={}){let{wrapper:t}=n.components||{};return t?(0,e.jsx)(t,Object.assign({},n,{children:(0,e.jsx)(s,{})})):s();function s(){let a=Object.assign({p:\"p\",h1:\"h1\",a:\"a\",span:\"span\",pre:\"pre\",code:\"code\",div:\"div\",h2:\"h2\"},n.components),{Image:i}=a;return i||S(\"Image\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(a.p,{children:\"This article is about how you can handle AWS RDS secrets rotation without restarting your Spring Boot application.\"}),`\n`,(0,e.jsxs)(a.h1,{id:\"introduction\",children:[(0,e.jsx)(a.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#introduction\",children:(0,e.jsx)(a.span,{className:\"icon icon-link\"})}),\"Introduction\"]}),`\n`,(0,e.jsx)(a.p,{children:\"I had this problem wherein I had to update my database connection whenever the database password was updated for my AWS RDS instance. This can be because of a monthly password rotation policy or may be the database credentials got compromised and you want all your running applications to keep running even when the database password are changed.\"}),`\n`,(0,e.jsx)(a.p,{children:\"To solve this kind of a problem, AWS provides a library that will handle this updating of the database connection without even restarting your Spring Boot application.\"}),`\n`,(0,e.jsxs)(a.p,{children:[\"AWS has an open source library called \",(0,e.jsx)(a.a,{href:\"https://github.com/aws/aws-secretsmanager-jdbc\",children:\"AWS Secrets Manager JDBC\"}),\", that handles database connection while your application is running and talking to the RDS instance.\"]}),`\n`,(0,e.jsx)(a.p,{children:\"Let\\u2019s see how this works.\"}),`\n`,(0,e.jsxs)(a.h1,{id:\"solution\",children:[(0,e.jsx)(a.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#solution\",children:(0,e.jsx)(a.span,{className:\"icon icon-link\"})}),\"Solution\"]}),`\n`,(0,e.jsx)(a.p,{children:\"Firstly, Add the following dependency in the build file. Considering maven, it would be as follows\"}),`\n`,(0,e.jsx)(a.pre,{className:\"language-xml\",children:(0,e.jsxs)(a.code,{className:\"language-xml code-highlight\",children:[(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsxs)(a.span,{className:\"token tag\",children:[(0,e.jsxs)(a.span,{className:\"token tag\",children:[(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"<\"}),\"dependency\"]}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"    \",(0,e.jsxs)(a.span,{className:\"token tag\",children:[(0,e.jsxs)(a.span,{className:\"token tag\",children:[(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"<\"}),\"groupId\"]}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\">\"})]}),\"com.amazonaws.secretsmanager\",(0,e.jsxs)(a.span,{className:\"token tag\",children:[(0,e.jsxs)(a.span,{className:\"token tag\",children:[(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"</\"}),\"groupId\"]}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"    \",(0,e.jsxs)(a.span,{className:\"token tag\",children:[(0,e.jsxs)(a.span,{className:\"token tag\",children:[(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"<\"}),\"artifactId\"]}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\">\"})]}),\"aws-secretsmanager-jdbc\",(0,e.jsxs)(a.span,{className:\"token tag\",children:[(0,e.jsxs)(a.span,{className:\"token tag\",children:[(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"</\"}),\"artifactId\"]}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"    \",(0,e.jsxs)(a.span,{className:\"token tag\",children:[(0,e.jsxs)(a.span,{className:\"token tag\",children:[(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"<\"}),\"version\"]}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\">\"})]}),\"1.0.5\",(0,e.jsxs)(a.span,{className:\"token tag\",children:[(0,e.jsxs)(a.span,{className:\"token tag\",children:[(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"</\"}),\"version\"]}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsxs)(a.span,{className:\"token tag\",children:[(0,e.jsxs)(a.span,{className:\"token tag\",children:[(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"</\"}),\"dependency\"]}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]})]})}),`\n`,(0,e.jsxs)(a.p,{children:[\"Next, specify the JDBC datasource URL with the scheme \",(0,e.jsx)(a.code,{children:\"jdbc-secretsmanager\"}),\" instead of \",(0,e.jsx)(a.code,{children:\"jdbc\"})]}),`\n`,(0,e.jsx)(a.pre,{className:\"language-properties\",children:(0,e.jsxs)(a.code,{className:\"language-properties code-highlight\",children:[(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token attr-name\",children:\"spring\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token attr-name\",children:\"  datasource\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token attr-name\",children:\"    url\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,e.jsx)(a.span,{className:\"token attr-value\",children:\"jdbc-secretsmanager:mysql://database-host:3306/rotate_db\"}),`\n`]})]})}),`\n`,(0,e.jsxs)(a.p,{children:[\"Next, You need to specify the driver class name. For this article we will stick to MySQL RDS instance. So it\\u2019s going to be \",(0,e.jsx)(a.code,{children:\"com.amazonaws.secretsmanager.sql.AWSSecretsManagerMySQLDrive\"}),\".\"]}),`\n`,(0,e.jsxs)(a.p,{children:[\"This library also requires the database-specific connection library. So you will need to add the MySQL connector library, Which is commonly the artifact \",(0,e.jsx)(a.code,{children:\"mysql-connector-java\"}),\". This will be used to make the actual connection with the database.\"]}),`\n`,(0,e.jsxs)(a.p,{children:[\"In case you are dealing with other databases, you can find the corresponding drivers from the source code \",(0,e.jsx)(a.a,{href:\"https://github.com/aws/aws-secretsmanager-jdbc/tree/master/src/main/java/com/amazonaws/secretsmanager/sql\",children:\"here\"}),\".\"]}),`\n`,(0,e.jsx)(a.p,{children:\"Next, Create an AWS secret for the RDS instance using the database credentials section in the AWS Secrets Manager.\"}),`\n`,(0,e.jsx)(a.div,{children:(0,e.jsx)(i,{alt:\"AWS secrets manager secret for RDS\",src:\"/static/images/2020/aws-secrets-rotation/aws-secrets.jpg\",width:\"760\",height:\"231\"})}),`\n`,(0,e.jsxs)(a.p,{children:[\"Next, In the properties file \",(0,e.jsx)(a.code,{children:\"application.yaml\"}),\", specify the secret name you just created as the username and you don\\u2019t have to specify any password as it\\u2019s now stored in the secrets manager.\"]}),`\n`,(0,e.jsx)(a.p,{children:\"Your property file should look something like this.\"}),`\n`,(0,e.jsx)(a.pre,{className:\"language-properties\",children:(0,e.jsxs)(a.code,{className:\"language-properties code-highlight\",children:[(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token attr-name\",children:\"spring\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token attr-name\",children:\"  datasource\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token attr-name\",children:\"    url\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,e.jsx)(a.span,{className:\"token attr-value\",children:\"jdbc-secretsmanager:mysql://database-host:3306/rotate_db\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token attr-name\",children:\"    username\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,e.jsx)(a.span,{className:\"token attr-value\",children:\"secret/rotation\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token attr-name\",children:\"    driver-class-name\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,e.jsx)(a.span,{className:\"token attr-value\",children:\"com.amazonaws.secretsmanager.sql.AWSSecretsManagerMySQLDriver\"}),`\n`]})]})}),`\n`,(0,e.jsxs)(a.p,{children:[\"Now, For the application to communicate with AWS and fetch the secret value, you would have to have AWS CLI setup and configured. \",(0,e.jsx)(a.a,{href:\"https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-quickstart.html\",children:\"Here\"}),\" is the link to it.\"]}),`\n`,(0,e.jsxs)(a.p,{children:[\"Once you have this in place, your application can connect to AWS by exporting the environment variable \",(0,e.jsx)(a.code,{children:\"AWS_PROFILE\"}),\" with the profile you setup while configuring the AWS configuration.\"]}),`\n`,(0,e.jsx)(a.p,{children:\"With this, you are done with the changes.\"}),`\n`,(0,e.jsx)(a.p,{children:\"Now start the application and it should be able to communicate with AWS Secrets Manager to fetch the credentials and start communicating with the AWS RDS instance.\"}),`\n`,(0,e.jsx)(a.p,{children:\"You can test this by clicking on the rotate secret option in the secret which will generate a new password for database and check the communication with the database.\"}),`\n`,(0,e.jsxs)(a.p,{children:[\"Here is a \",(0,e.jsx)(a.a,{href:\"https://github.com/amrutprabhu/spring-boot-aws-rds-password-rotation\",children:\"GitHub link\"}),\" to my implementation.\"]}),`\n`,(0,e.jsxs)(a.h2,{id:\"supports-liquibase-integration\",children:[(0,e.jsx)(a.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#supports-liquibase-integration\",children:(0,e.jsx)(a.span,{className:\"icon icon-link\"})}),\"Supports Liquibase Integration\"]}),`\n`,(0,e.jsx)(a.p,{children:\"This also works if you have liquibase integration in place . You just have to specify the same URL in the liquibase configuration and the database secret as the username and the liquibase setup will work for you.\"}),`\n`,(0,e.jsx)(a.pre,{className:\"language-properties\",children:(0,e.jsxs)(a.code,{className:\"language-properties code-highlight\",children:[(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token attr-name\",children:\"spring\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token attr-name\",children:\"  datasource\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token attr-name\",children:\"    url\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,e.jsx)(a.span,{className:\"token attr-value\",children:\"jdbc-secretsmanager:mysql://database-host:3306/rotate_db\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token attr-name\",children:\"    username\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,e.jsx)(a.span,{className:\"token attr-value\",children:\"secret/rotation\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token attr-name\",children:\"    driver-class-name\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,e.jsx)(a.span,{className:\"token attr-value\",children:\"com.amazonaws.secretsmanager.sql.AWSSecretsManagerMySQLDriver\"}),`\n`]}),(0,e.jsx)(a.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token attr-name\",children:\"  liquibase\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token attr-name\",children:\"    url\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,e.jsx)(a.span,{className:\"token attr-value\",children:\"jdbc-secretsmanager:mysql://database-host:3306/rotate_db\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token attr-name\",children:\"    user\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,e.jsx)(a.span,{className:\"token attr-value\",children:\"secret/rotation\"}),`\n`]})]})}),`\n`,(0,e.jsx)(a.p,{children:\"Enjoy and have fun!\"})]})}}var f=y;function S(n,t){throw new Error(\"Expected \"+(t?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return v;})();\n;return Component;","toc":[{"value":"Introduction","url":"#introduction","depth":1},{"value":"Solution","url":"#solution","depth":1},{"value":"Supports Liquibase Integration","url":"#supports-liquibase-integration","depth":2}],"frontMatter":{"readingTime":{"text":"4 min read","minutes":3.46,"time":207600,"words":692},"slug":"2020/spring-boot-aws-rds-jdbc-secrets-rotation-without-restart","fileName":"2020/spring-boot-aws-rds-jdbc-secrets-rotation-without-restart.md","title":"Spring Boot: Handle AWS RDS JDBC password change or rotation without restarting","author":"Amrut Prabhu","categories":"","tags":["AWS","RDS","Secrets manager","Spring Boot","Java"],"image":"2020-11-05/aws-secrets-rotation.jpg","photo-credits":"https://unsplash.com/photos/B_hAlVqataE","applaud-link":"spring-boot-aws-rds-secrets-rotation.json","date":"2020-11-05T00:00:00.000Z","draft":false,"summary":"Here, we see how we can handle AWS RDS secrets rotation without restarting your Spring Boot application","imageUrl":"/static/images/2020/aws-secrets-rotation/cover.jpg","actualUrl":"2020/spring-boot-aws-rds-jdbc-secrets-rotation-without-restart","customUrl":"spring-boot-aws-rds-jdbc-secrets-rotation-without-restart"}},"authorDetails":[{"readingTime":{"text":"1 min read","minutes":0.875,"time":52500,"words":175},"slug":["default"],"fileName":"default.md","name":"Amrut Prabhu","avatar":"/static/images/avatar-small.jpg","avatarBig":"/static/images/avatar-big.jpg","occupation":"Staff Engineer","company":"Personal","email":"address@yoursite.com","twitter":"https://twitter.com/amrutprabhu42","linkedin":"https://www.linkedin.com/in/amrut-prabhu-722baa65/","github":"https://github.com/amrutprabhu","customUrl":"default","actualUrl":"default","date":null}],"prev":null,"next":{"title":"Spring Boot: Boost JPA Bulk Insert Performance by 100x","author":"Amrut Prabhu","categories":"","tags":["JPA","mysql","database","Spring Boot","Java"],"image":"2021-01-24/jpa-performance-boost.jpg","photo-credits":"https://unsplash.com/photos/V6G6PZWPASo","applaud-link":"spring-boot-boost-jpa-insert.json","date":"2021-01-24T00:00:00.000Z","draft":false,"summary":"Here we see how we can boost the bulk insert performance using JPA to insert large number of records into a database","imageUrl":"/static/images/2021/boost-jpa-bulk-insert/jpa-performance-boost.jpg","actualUrl":"2020/spring-boot-boost-jpa-bulk-insert-performance-by-100x","customUrl":"spring-boot-boost-jpa-bulk-insert-performance-by-100x","slug":"spring-boot-boost-jpa-bulk-insert-performance-by-100x"}},"__N_SSG":true}