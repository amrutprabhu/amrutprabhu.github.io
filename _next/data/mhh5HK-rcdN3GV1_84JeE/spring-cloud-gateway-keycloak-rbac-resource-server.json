{"pageProps":{"post":{"mdxSource":"var Component=(()=>{var d=Object.create;var l=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var o=a=>l(a,\"__esModule\",{value:!0});var k=(a,s)=>()=>(s||a((s={exports:{}}).exports,s),s.exports),N=(a,s)=>{o(a);for(var t in s)l(a,t,{get:s[t],enumerable:!0})},g=(a,s,t)=>{if(s&&typeof s==\"object\"||typeof s==\"function\")for(let n of h(s))!m.call(a,n)&&n!==\"default\"&&l(a,n,{get:()=>s[n],enumerable:!(t=p(s,n))||t.enumerable});return a},w=a=>g(o(l(a!=null?d(u(a)):{},\"default\",a&&a.__esModule&&\"default\"in a?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a);var i=k((C,r)=>{r.exports=_jsx_runtime});var I={};N(I,{default:()=>f,frontmatter:()=>y});var e=w(i()),y={title:\"Spring Cloud Gateway \\u2014 Resource Server with Keycloak RBAC\",author:\"Amrut Prabhu\",categories:\"\",tags:[\"Spring Boot\",\"Java\",\"Gateway\",\"Keycloak\",\"Oauth2\",\"OpenId Connect\",\"Resource Server\"],image:\"2021/spring-cloud-gateway-with-resource-server/cover.jpg\",\"photo-credits\":null,\"applaud-link\":\"2021/spring-gateway-keycloak-resource-server.json\",date:\"2021-09-16\",draft:!1,summary:\"In this article, we will be exploring how we can integrate a resource server with an API gateway that is integrated with Keycloak and enable role-based access control (RBAC)\",imageUrl:\"/static/images/2021/spring-cloud-gateway-with-resource-server/cover.jpg\",actualUrl:\"auto-generated\",customUrl:\"auto-generated\"};function v(a={}){let{wrapper:s}=a.components||{};return s?(0,e.jsx)(s,Object.assign({},a,{children:(0,e.jsx)(t,{})})):t();function t(){let n=Object.assign({p:\"p\",h1:\"h1\",a:\"a\",span:\"span\",h2:\"h2\",div:\"div\",ul:\"ul\",li:\"li\",pre:\"pre\",code:\"code\",strong:\"strong\"},a.components),{Image:c}=n;return c||b(\"Image\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.p,{children:\"In this article, we will be exploring how we can integrate a resource server with an API gateway that is integrated with Keycloak and enable role-based access control (RBAC).\"}),`\n`,(0,e.jsxs)(n.h1,{id:\"introduction\",children:[(0,e.jsx)(n.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#introduction\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Introduction\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"In my previous article \\u201C\",(0,e.jsx)(n.a,{href:\"https://refactorfirst.com/spring-cloud-gateway-keycloak-oauth2-openid-connect.html\",children:\"Spring Cloud Gateway Keycloak OAuth2 OIDC Integration\"}),\"\\u201D, I have shown how we can integrate Keycloak with Spring Cloud Gateway. Now in this article, we will extend this further to integrate a resource server, such that a client(e.g browser) can access a resource only when he has the correct role to access the resource on the server. This is a continuation of the previous article \",(0,e.jsx)(n.a,{href:\"https://refactorfirst.com/spring-cloud-gateway-keycloak-oauth2-openid-connect.html\",children:\"Spring Cloud Gateway Keycloak OAuth2 OIDC Integration\"}),\", So I recommend reading it.\"]}),`\n`,(0,e.jsx)(n.p,{children:\"So let\\u2019s get started.\"}),`\n`,(0,e.jsxs)(n.h2,{id:\"adding-a-custom-keycloak-role-to-the-user\",children:[(0,e.jsx)(n.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#adding-a-custom-keycloak-role-to-the-user\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Adding a custom keycloak role to the user.\"]}),`\n`,(0,e.jsx)(n.p,{children:\"Let\\u2019s add a role to the user in order to allow it to access the resource server.\"}),`\n`,(0,e.jsx)(n.p,{children:\"For this, we will go to our realm and under the roles section and create a role called \\u201Cproduct_read\\u201D.\"}),`\n`,(0,e.jsx)(n.div,{children:(0,e.jsx)(c,{alt:\"create keycloak role\",src:\"/static/images/2021/spring-cloud-gateway-with-resource-server/create-role.png\",width:\"678\",height:\"311\"})}),`\n`,(0,e.jsx)(n.p,{children:\"Once the role is created, we will then assign this role to our \\u201Ctest\\u201D user. To do that, go to the \\u201CUsers\\u201D section and then select the user \\u201Ctest\\u201D. Once you are in the user's settings, go to the \\u201CRole Mappings\\u201D tab and add the role to the user as follows.\"}),`\n`,(0,e.jsx)(n.div,{children:(0,e.jsx)(c,{alt:\"Keycloak assign role\",src:\"/static/images/2021/spring-cloud-gateway-with-resource-server/assign-role-to-user.png\",width:\"972\",height:\"481\"})}),`\n`,(0,e.jsx)(n.p,{children:\"We can remove the defaults roles that are already present, but I would leave them for now.\"}),`\n`,(0,e.jsx)(n.p,{children:\"With this, we are done with allowing the user \\u201Ctest\\u201D to access the product resource from the Keycloak side.\"}),`\n`,(0,e.jsx)(n.p,{children:\"Now Let\\u2019s create the resource server.\"}),`\n`,(0,e.jsxs)(n.h2,{id:\"creating-a-resource-server\",children:[(0,e.jsx)(n.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#creating-a-resource-server\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Creating a Resource Server\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Since we already have the code for the gateway application we will use the same and add a resource server to it. If you haven\\u2019t read my previous \",(0,e.jsx)(n.a,{href:\"https://refactorfirst.com/spring-cloud-gateway-keycloak-oauth2-openid-connect.html\",children:\"article\"}),\", then you can directly use the API Gateway code from my \",(0,e.jsx)(n.a,{href:\"https://github.com/amrutprabhu/keycloak-spring-cloud-gateway-and-resource-server/tree/main/spring-cloud-gateway-keycloak-oauth2\",children:\"Github repo\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"To create the resource server, let's go to \",(0,e.jsx)(n.a,{href:\"https://start.spring.io\",children:\"https://start.spring.io\"}),\" and create an application called \\u201Cproduct-service\\u201D with the following dependencies.\"]}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"OAuth2 resource server\"}),`\n`,(0,e.jsx)(n.li,{children:\"Spring Web\"}),`\n`]}),`\n`,(0,e.jsx)(n.p,{children:\"Once you generate and download the project, we will create a simple RestController that provides access to product resources.\"}),`\n`,(0,e.jsx)(n.pre,{className:\"language-java\",children:(0,e.jsxs)(n.code,{className:\"language-java code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token annotation punctuation\",children:\"@RestController\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"class\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Controller\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token annotation punctuation\",children:\"@GetMapping\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:'\"/product\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token annotation punctuation\",children:\"@RolesAllowed\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),(0,e.jsx)(n.span,{className:\"token string\",children:'\"product_read\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"String\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"getProduct\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Principal\"}),\" principal\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"return\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"Response from Product Service, User Id:\"'}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"+\"}),\" principal\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token function\",children:\"getName\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,e.jsx)(n.p,{children:\"Here I am protecting the GET call with the \\u201Cproduct_read\\u201D role which we had created in Keycloak. This means if the user can access the resource only if it has the role \\u201Cproduct_read\\u201D.\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Next, We will add some properties to \",(0,e.jsx)(n.code,{children:\"application.yaml\"})]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-yaml\",children:(0,e.jsxs)(n.code,{className:\"language-yaml code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"spring\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"security\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"oauth2\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"resourceserver\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"jwt\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"          \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"jwk-set-uri\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),\" http\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),\"//localhost\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),\"8080/auth/realms/My\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),\"Realm/protocol/openid\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),`connect/certs\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"server\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"port\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"9191\"}),`\n`]})]})}),`\n`,(0,e.jsx)(n.p,{children:\"We can get this JWK URI from the \\u201COpenId Connect Configuration\\u201D on the realm settings page. This JWK URI is required to validate the JWT token that comes in with the request.\"}),`\n`,(0,e.jsx)(n.p,{children:\"Next, let\\u2019s set up the security configuration.\"}),`\n`,(0,e.jsx)(n.pre,{className:\"language-java\",children:(0,e.jsxs)(n.code,{className:\"language-java code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token annotation punctuation\",children:\"@Configuration\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token annotation punctuation\",children:\"@EnableWebSecurity\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token annotation punctuation\",children:\"@EnableGlobalMethodSecurity\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"jsr250Enabled \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token boolean\",children:\"true\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"class\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"ResourceServerConfig\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"extends\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"WebSecurityConfigurerAdapter\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"   \",(0,e.jsx)(n.span,{className:\"token annotation punctuation\",children:\"@Override\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"   \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"protected\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"void\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"configure\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token class-name\",children:\"HttpSecurity\"}),\" http\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"throws\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Exception\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`      http\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"         \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token function\",children:\"authorizeRequests\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token function\",children:\"anyRequest\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token function\",children:\"authenticated\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"         \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token function\",children:\"and\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token function\",children:\"oauth2ResourceServer\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"              \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token function\",children:\"jwt\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"jwt \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"->\"}),\" jwt\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token function\",children:\"jwtAuthenticationConverter\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"jwtAuthenticationConverter\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"   \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"   \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"private\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Converter\"}),(0,e.jsxs)(n.span,{className:\"token generics\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Jwt\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"?\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"extends\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"AbstractAuthenticationToken\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"jwtAuthenticationConverter\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"JwtAuthenticationConverter\"}),\" jwtConverter \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"new\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"JwtAuthenticationConverter\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"      jwtConverter\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token function\",children:\"setJwtGrantedAuthoritiesConverter\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token keyword\",children:\"new\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"RealmRoleConverter\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"return\"}),\" jwtConverter\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"   \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Here, we have added the\",(0,e.jsx)(n.code,{children:\"@EnableGlobalMethodSecurity\"}),\" annotation, to enable method-level security in our application.\"]}),`\n`,(0,e.jsx)(n.p,{children:\"We then create a custom authorities converter. This converter will take out the keycloak roles (that are set as claims) from the JWT token and set them as authorities in spring security for role-based access.\"}),`\n`,(0,e.jsx)(n.p,{children:\"Let\\u2019s look at the converter code.\"}),`\n`,(0,e.jsx)(n.pre,{className:\"language-java\",children:(0,e.jsxs)(n.code,{className:\"language-java code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"class\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"RealmRoleConverter\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"implements\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Converter\"}),(0,e.jsxs)(n.span,{className:\"token generics\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Jwt\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Collection\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),(0,e.jsx)(n.span,{className:\"token class-name\",children:\"GrantedAuthority\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token annotation punctuation\",children:\"@Override\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Collection\"}),(0,e.jsxs)(n.span,{className:\"token generics\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),(0,e.jsx)(n.span,{className:\"token class-name\",children:\"GrantedAuthority\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"convert\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Jwt\"}),\" jwt\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"final\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Map\"}),(0,e.jsxs)(n.span,{className:\"token generics\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),(0,e.jsx)(n.span,{className:\"token class-name\",children:\"String\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"List\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),(0,e.jsx)(n.span,{className:\"token class-name\",children:\"String\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),\" realmAccess \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Map\"}),(0,e.jsxs)(n.span,{className:\"token generics\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),(0,e.jsx)(n.span,{className:\"token class-name\",children:\"String\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"List\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),(0,e.jsx)(n.span,{className:\"token class-name\",children:\"String\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" jwt\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token function\",children:\"getClaims\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token function\",children:\"get\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:'\"realm_access\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"return\"}),\"  realmAccess\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token function\",children:\"get\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:'\"roles\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token function\",children:\"stream\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"                \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token function\",children:\"map\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"roleName \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"->\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"ROLE_\"'}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"+\"}),\" roleName\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"                \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token function\",children:\"map\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token class-name\",children:\"SimpleGrantedAuthority\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\"::\"}),(0,e.jsx)(n.span,{className:\"token keyword\",children:\"new\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"                \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token function\",children:\"collect\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Collectors\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token function\",children:\"toList\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"In this converter, we extract the \\u201Crealm*access\\u201D claims and then convert them to roles, using the \",(0,e.jsx)(n.code,{children:\"ROLE*\"}),\" as a prefix. Spring security requires this prefix to interpret them as roles.\"]}),`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\"Why do we need this converter?\"})}),`\n`,(0,e.jsx)(n.p,{children:\"To answer this question, let\\u2019s look at the decoded JWT token.\"}),`\n`,(0,e.jsx)(n.div,{children:(0,e.jsx)(c,{alt:\"Keycloak decoded token\",src:\"/static/images/2021/spring-cloud-gateway-with-resource-server/jwt-decoded.png\",width:\"420\",height:\"660\"})}),`\n`,(0,e.jsx)(n.p,{children:\"The JWT payload has two parts, the \\u201Crealm_access\\u201D and the \\u201Cscope\\u201D. By default, the OAuth2 resource server JWT converter uses the \\u201Cscope\\u201D claims. But these claims are part of the client scope i.e the client that was used in the API Gateway. If you go to the \\u201CClient Scopes\\u201D section in the client\\u2019s setting in Keycloak, you would find these scopes.\"}),`\n`,(0,e.jsx)(n.p,{children:\"So we use the converter to extract the realm roles and use them as authorities in our spring application.\"}),`\n`,(0,e.jsx)(n.p,{children:\"With all of this, we are done with creating the resource server.\"}),`\n`,(0,e.jsx)(n.p,{children:\"Now, to connect it to the API Gateway application, we would have to make some changes to the API Gateway. Let\\u2019s have a look at that.\"}),`\n`,(0,e.jsxs)(n.h2,{id:\"connecting-resource-server-to-api-gateway\",children:[(0,e.jsx)(n.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#connecting-resource-server-to-api-gateway\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Connecting Resource Server to API Gateway\"]}),`\n`,(0,e.jsx)(n.p,{children:\"To connect the product service resource server, We will add a route to the properties file of the API Gateway.\"}),`\n`,(0,e.jsx)(n.pre,{className:\"language-yaml\",children:(0,e.jsxs)(n.code,{className:\"language-yaml code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"spring\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"cloud\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"gateway\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"default-filters\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` TokenRelay\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"routes\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),\" \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"id\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),\" product\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),\"resource\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),`service\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"          \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"uri\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),\" http\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),\"//localhost\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),(0,e.jsx)(n.span,{className:\"token number\",children:\"9191\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"          \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"predicates\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),\" Path=/product/\",(0,e.jsx)(n.span,{className:\"token important\",children:\"**\"}),`\n`]})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Here we are setting a route for any path request matching \",(0,e.jsx)(n.code,{children:\"/product\"}),\" will be directed to the resource server (product-service) that is running at localhost at port 9191.\"]}),`\n`,(0,e.jsx)(n.p,{children:\"In the default-filters section, we would have to add \\u201CTokenRelay\\u201D, so that the API Gateway passes the JWT access token to the resource server.\"}),`\n`,(0,e.jsx)(n.p,{children:\"With these properties, we are set to now run both the applications, i.e the API gateway and the product service.\"}),`\n`,(0,e.jsxs)(n.h2,{id:\"running-the-applications\",children:[(0,e.jsx)(n.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#running-the-applications\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Running the Applications\"]}),`\n`,(0,e.jsx)(n.p,{children:\"You can start the API Gateway and product service application using the commands.\"}),`\n`,(0,e.jsx)(n.pre,{className:\"language-bash\",children:(0,e.jsxs)(n.code,{className:\"language-bash code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`java -jar target/spring-cloud-gateway-keycloak-oauth2-0.0.1-SNAPSHOT.jar\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`java -jar target/product-service-0.0.1-SNAPSHOT.jar\n`})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"The API Gateway runs at 9090 and the product service runs at 9191. Now let's go to the browser and call the following URL \",(0,e.jsx)(n.code,{children:\"localhost:9090/product\"}),\". On accessing the product resource from the API Gateway, we are redirected to the keycloak login page which is running at 8080. Use the username and password \\u201Ctest\\u201D and log in.\"]}),`\n`,(0,e.jsx)(n.div,{children:(0,e.jsx)(c,{alt:\"keycloak login page\",src:\"/static/images/2021/spring-cloud-gateway-with-resource-server/user-login-page.png\",width:\"924\",height:\"588\"})}),`\n`,(0,e.jsx)(n.p,{children:\"Once you log in, you get the response from the resource server containing the User Id from Keycloak.\"}),`\n`,(0,e.jsx)(n.div,{children:(0,e.jsx)(c,{alt:\"keycloak resource server\",src:\"/static/images/2021/spring-cloud-gateway-with-resource-server/resource-server-response.png\",width:\"684\",height:\"87\"})}),`\n`,(0,e.jsxs)(n.h2,{id:\"conclusion\",children:[(0,e.jsx)(n.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#conclusion\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Conclusion\"]}),`\n`,(0,e.jsx)(n.p,{children:\"In this article, we integrated a resource server with Spring Cloud Gateway application. We also Integrated Keycloak\\u2019s OAuth2 OpenId Connect (OIDC) for authentication in the API Gateway and also performed a role-based access control (RBAC) inside the resource server with the JWT token sent from the API Gateway.\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"I have uploaded the entire code integrating Keycloak, API Gateway, and resource server to my \",(0,e.jsx)(n.a,{href:\"https://github.com/amrutprabhu/keycloak-spring-cloud-gateway-and-resource-server\",children:\"Github repo\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"I keep exploring and learning new things. If you want to know the latest trends and improve your software development skills, then subscribe to my newsletter below and also follow me on \",(0,e.jsx)(n.a,{href:\"https://twitter.com/amrutprabhu42\",children:\"Twitter\"}),\".\"]}),`\n`,(0,e.jsx)(n.p,{children:\"Enjoy!!\"})]})}}var f=v;function b(a,s){throw new Error(\"Expected \"+(s?\"component\":\"object\")+\" `\"+a+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return I;})();\n;return Component;","toc":[{"value":"Introduction","url":"#introduction","depth":1},{"value":"Adding a custom keycloak role to the user.","url":"#adding-a-custom-keycloak-role-to-the-user","depth":2},{"value":"Creating a Resource Server","url":"#creating-a-resource-server","depth":2},{"value":"Connecting Resource Server to API Gateway","url":"#connecting-resource-server-to-api-gateway","depth":2},{"value":"Running the Applications","url":"#running-the-applications","depth":2},{"value":"Conclusion","url":"#conclusion","depth":2}],"frontMatter":{"readingTime":{"text":"8 min read","minutes":7.595,"time":455700,"words":1519},"slug":"2021/spring-cloud-gateway-keycloak-rbac-resource-server","fileName":"2021/spring-cloud-gateway-keycloak-rbac-resource-server.md","title":"Spring Cloud Gateway — Resource Server with Keycloak RBAC","author":"Amrut Prabhu","categories":"","tags":["Spring Boot","Java","Gateway","Keycloak","Oauth2","OpenId Connect","Resource Server"],"image":"2021/spring-cloud-gateway-with-resource-server/cover.jpg","photo-credits":null,"applaud-link":"2021/spring-gateway-keycloak-resource-server.json","date":"2021-09-16T00:00:00.000Z","draft":false,"summary":"In this article, we will be exploring how we can integrate a resource server with an API gateway that is integrated with Keycloak and enable role-based access control (RBAC)","imageUrl":"/static/images/2021/spring-cloud-gateway-with-resource-server/cover.jpg","actualUrl":"2021/spring-cloud-gateway-keycloak-rbac-resource-server","customUrl":"spring-cloud-gateway-keycloak-rbac-resource-server"}},"authorDetails":[{"readingTime":{"text":"1 min read","minutes":0.875,"time":52500,"words":175},"slug":["default"],"fileName":"default.md","name":"Amrut Prabhu","avatar":"/static/images/avatar-small.jpg","avatarBig":"/static/images/avatar-big.jpg","occupation":"Staff Engineer","company":"Personal","email":"address@yoursite.com","twitter":"https://twitter.com/amrutprabhu42","linkedin":"https://www.linkedin.com/in/amrut-prabhu-722baa65/","github":"https://github.com/amrutprabhu","customUrl":"default","actualUrl":"default","date":null}],"prev":{"title":"Spring Cloud Gateway Keycloak OAuth2 OIDC Integration","author":"Amrut Prabhu","categories":"","tags":["Spring Boot","Java","Gateway","Keycloak","Oauth2","OpenId Connect"],"photo-credits":"","applaud-link":"2021/spring-gateway-oauth2-keycloak.json","date":"2021-09-02T00:00:00.000Z","draft":false,"summary":"In this article, we would be looking at how we can integrate Keycloak with Spring Cloud Gateway using the OAuth2 OpenId Connect (OIDC).","imageUrl":"/static/images/2021/spring-cloud-gateway-with-keycloak/cover.jpg","actualUrl":"2021/spring-cloud-gateway-keycloak-oauth2-openid-connect","customUrl":"spring-cloud-gateway-keycloak-oauth2-openid-connect","slug":"spring-cloud-gateway-keycloak-oauth2-openid-connect"},"next":{"title":"Distributed Tracing With Spring Cloud Jaeger","author":"Amrut Prabhu","categories":"","tags":["Spring Boot","Java","Jaeger","Distributed Tracing"],"image":"2021/distributed-tracing-with-jaeger/cover.jpg","photo-credits":null,"applaud-link":"2021/distributed-tracing-with-spring-cloud-jaeger.json","date":"2021-09-23T00:00:00.000Z","draft":false,"summary":"In this article, We will explore how to implement distributed tracing in a Spring Boot application using Jaeger and visualize the traces using Jaeger UI","imageUrl":"/static/images/2021/distributed-tracing-with-jaeger/cover.jpg","actualUrl":"2021/distributed-tracing-spring-boot-opentracing-jaeger","customUrl":"distributed-tracing-spring-boot-opentracing-jaeger","slug":"distributed-tracing-spring-boot-opentracing-jaeger"}},"__N_SSG":true}