{"pageProps":{"post":{"mdxSource":"var Component=(()=>{var r=Object.create;var t=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var l=a=>t(a,\"__esModule\",{value:!0});var u=(a,s)=>()=>(s||a((s={exports:{}}).exports,s),s.exports),N=(a,s)=>{l(a);for(var c in s)t(a,c,{get:s[c],enumerable:!0})},k=(a,s,c)=>{if(s&&typeof s==\"object\"||typeof s==\"function\")for(let e of p(s))!m.call(a,e)&&e!==\"default\"&&t(a,e,{get:()=>s[e],enumerable:!(c=d(s,e))||c.enumerable});return a},y=a=>k(l(t(a!=null?r(h(a)):{},\"default\",a&&a.__esModule&&\"default\"in a?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a);var i=u((x,o)=>{o.exports=_jsx_runtime});var b={};N(b,{default:()=>f,frontmatter:()=>w});var n=y(i()),w={title:\"What are Java Records\",author:\"Amrut Prabhu\",categories:\"\",tags:[\"Spring Boot\",\"Java\"],image:\"java-records/java-records-title.jpg\",\"photo-credits\":\"https://unsplash.com/photos/3vXOHr_fMi8\",\"applaud-link\":\"java-16-records.json\",date:\"2021-05-27\",draft:!1,summary:\"Here we look into What are Java Record and its uses\",imageUrl:\"/static/images/2021/java-records/java-records-title.jpg\",actualUrl:\"auto-generated\",customUrl:\"auto-generated\"};function g(a={}){let{wrapper:s}=a.components||{};return s?(0,n.jsx)(s,Object.assign({},a,{children:(0,n.jsx)(c,{})})):c();function c(){let e=Object.assign({h1:\"h1\",a:\"a\",span:\"span\",p:\"p\",pre:\"pre\",code:\"code\",ul:\"ul\",li:\"li\",h2:\"h2\"},a.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.h1,{id:\"java-record\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#java-record\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Java Record\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Java record is a type of class whose sole purpose is to drive programming with immutable data. Let\\u2019s look at a simple example.\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-java\",children:(0,n.jsx)(e.code,{className:\"language-java code-highlight\",children:(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"record\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Data\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"int\"}),\" x\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"int\"}),\" y\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]})})}),`\n`,(0,n.jsx)(e.p,{children:\"So here we have created a record with header x and y. Here x and y are referred to as components of a record.\"}),`\n`,(0,n.jsx)(e.p,{children:\"Now, When we create a record, we get the following:-\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"You get final fields based on the record components.\"}),`\n`,(0,n.jsx)(e.li,{children:\"You get a canonical constructor. (constructor based on the record components)\"}),`\n`,(0,n.jsxs)(e.li,{children:[\"You get an accessor method that is the same as the field\\u2019s name, an \",(0,n.jsx)(e.code,{children:\"equals\"}),\" method, and a \",(0,n.jsx)(e.code,{children:\"hashcode\"}),\" method out of the box already implemented for you.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"You get a \",(0,n.jsx)(e.code,{children:\"toString\"}),\" method implementation that prints the record components along with the component names.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"So an equivalent class would be like this:\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-java\",children:(0,n.jsxs)(e.code,{className:\"language-java code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"class\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Data\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"final\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"private\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"int\"}),\" x\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"final\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"private\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"int\"}),\" y\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Data\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"int\"}),\" x\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"int\"}),\" y\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"this\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"x \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" x\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"this\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"y \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" y\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"boolean\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"equals\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Object\"}),\" o\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"int\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"hashCode\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"       \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"String\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"toString\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,n.jsx)(e.p,{children:\"Let\\u2019s dig in further about records.\"}),`\n`,(0,n.jsxs)(e.h1,{id:\"initialization-of-records\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#initialization-of-records\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Initialization of records\"]}),`\n`,(0,n.jsx)(e.p,{children:\"When we declare a normal class without any constructor the compiler provides a default constructor with no arguments. In the case of records, an implicit canonical constructor based on the record components is provided.\"}),`\n`,(0,n.jsx)(e.p,{children:\"You can explicitly create a canonical constructor by yourself do things like e.g validations but there is a more concise way to do that. Let\\u2019s have a look.\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-java\",children:(0,n.jsxs)(e.code,{className:\"language-java code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"record\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Data\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token keyword\",children:\"int\"}),\" x\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"int\"}),\" y\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Data\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"if\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"x \",(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),\"y\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"            \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"throw\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"new\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"IllegalArgumentException\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        x\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"+=\"}),(0,n.jsx)(e.span,{className:\"token number\",children:\"100\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        y\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"+=\"}),(0,n.jsx)(e.span,{className:\"token number\",children:\"100\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,n.jsx)(e.p,{children:\"Here in the above record, I have performed a simple validation, and once it passes I further add 100 to each. This way of defining a compact constructor means I am still working with header variables and the actual assignment to the instance variables happens at the end. The above code would be equivalent to the following :\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-java\",children:(0,n.jsxs)(e.code,{className:\"language-java code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"class\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Data\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"final\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"private\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"int\"}),\" x\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"final\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"private\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"int\"}),\" y\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Data\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"int\"}),\" x\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"int\"}),\" y\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"if\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"x \",(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),\"y\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"            \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"throw\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"new\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"IllegalArgumentException\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        x\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"+=\"}),(0,n.jsx)(e.span,{className:\"token number\",children:\"100\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        y\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"+=\"}),(0,n.jsx)(e.span,{className:\"token number\",children:\"100\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"this\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"x \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" x\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"this\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"y \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" y\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.h1,{id:\"record-classes-cannot-be-extended-nor-support-extension\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#record-classes-cannot-be-extended-nor-support-extension\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Record classes cannot be extended nor support extension.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Record classes do not support extensions. You cannot extend it with any other class, not even a record class. The only implicit superclass it has is \",(0,n.jsx)(e.code,{children:\"java.lang.Record\"}),\". Defining this explicitly using extends will lead to compilation errors.\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Also, record classes are implicitly final. They cannot be declared abstract to allow further extensions. This means you cannot have any sub-records of a record.\"}),`\n`,(0,n.jsxs)(e.h1,{id:\"implementing-interfaces\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#implementing-interfaces\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Implementing Interfaces\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Record classes allow you to implement interfaces. You can implement any interface you want whether it\\u2019s a single interface or multiple interfaces.\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-java\",children:(0,n.jsx)(e.code,{className:\"language-java code-highlight\",children:(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"record\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Data\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"int\"}),\" x\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"int\"}),\" y\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"implements\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Runnable\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Serializable\"}),`\n`]})})}),`\n`,(0,n.jsxs)(e.h1,{id:\"cannot-define-your-own-instance-variables\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#cannot-define-your-own-instance-variables\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Cannot define your own instance variables\"]}),`\n`,(0,n.jsx)(e.p,{children:\"When you define the header, it represents the state of your record class. This means you cannot have any other instance variable inside the record. the only instance variable that would be created is the ones provided in the header component.\"}),`\n`,(0,n.jsx)(e.p,{children:\"However, you can have static variables inside records and can be accessed the same as classes by using the record class name.\"}),`\n`,(0,n.jsxs)(e.h1,{id:\"defining-your-own-methods\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#defining-your-own-methods\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Defining your own methods\"]}),`\n`,(0,n.jsx)(e.p,{children:\"You can define your own methods that you would want to use inside a record. Even your own version of the accessor, equals, or even hashcode methods. But make sure you do no make changes that would result in breaking what immutability means.\"}),`\n`,(0,n.jsx)(e.p,{children:\"You can define static methods and static initializers also. These are the same as how we have it in class declarations.\"}),`\n`,(0,n.jsxs)(e.h1,{id:\"applying-annotations\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#applying-annotations\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Applying annotations.\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Now, Something important about applying annotations. When defining the annotations, We can apply them to the record components. Now depending on the target scope of the annotation, The annotation will apply to those scopes. Let\\u2019s look at the different cases.\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"If the annotation is targeted to fields, then it\\u2019s applied to the private instance variable.\"}),`\n`,(0,n.jsx)(e.li,{children:\"In the case of the target is a method, It would be applied to the accessor method.\"}),`\n`,(0,n.jsx)(e.li,{children:\"If the annotation refers to the header arguments, then they would refer to the parameters of the canonical constructor arguments.\"}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"E.g if you apply a \",(0,n.jsx)(e.code,{children:\"@NotNull\"}),\"annotation which actually applies to field, method, and constructor then it would get applied to the instance variable, the accessor method, and the constructor also.\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Now take the case where you explicitly define an annotation on your custom-defined accessor method or canonical constructor, then the annotations on these would only be applied to the corresponding method or constructor.\"}),`\n`,(0,n.jsxs)(e.h2,{id:\"local-records\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#local-records\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Local records\"]}),`\n`,(0,n.jsx)(e.p,{children:\"I see records have a very useful place when we just want to temporarily hold immutable data inside a function.\"}),`\n`,(0,n.jsx)(e.p,{children:\"Let me explain this with an example.\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-java\",children:(0,n.jsxs)(e.code,{className:\"language-java code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"List\"}),(0,n.jsxs)(e.span,{className:\"token generics\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Person\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"sortPeopleByAge\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token class-name\",children:\"List\"}),(0,n.jsxs)(e.span,{className:\"token generics\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Person\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),\" people\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"record\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Data\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Person\"}),\" person\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"int\"}),\" age\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"return\"}),\" people\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"stream\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"            \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"map\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"person \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"->\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"new\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Data\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"person\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"computeAge\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"person\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"            \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"sorted\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"d1\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" d2\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"->\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Double\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"_compare_\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"d2\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"age\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" d1\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"age\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"            \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"map\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Data\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\"::\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"person\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"            \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"collect\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"_toList_\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,n.jsx)(e.p,{children:\"Here I created a local record class without any ceremony that you would require while creating a class. I use it to store the intermediate result and then use it for comparing. Such things would help you to have more concise and readable code.\"}),`\n`,(0,n.jsx)(e.p,{children:\"With this, we reached the end of this article about records in Java 16.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Feel free to share the article and join me on \",(0,n.jsx)(e.a,{href:\"https://twitter.com/amrutprabhu42\",children:\"Twitter\"}),\". You can also subscribe to my newsletter on \",(0,n.jsx)(e.a,{href:\"https://refactorfirst.com/\",children:\"RefactorFirst.com\"})]})]})}}var f=g;return b;})();\n;return Component;","toc":[{"value":"Java Record","url":"#java-record","depth":1},{"value":"Initialization of records","url":"#initialization-of-records","depth":1},{"value":"Record classes cannot be extended nor support extension.","url":"#record-classes-cannot-be-extended-nor-support-extension","depth":1},{"value":"Implementing Interfaces","url":"#implementing-interfaces","depth":1},{"value":"Cannot define your own instance variables","url":"#cannot-define-your-own-instance-variables","depth":1},{"value":"Defining your own methods","url":"#defining-your-own-methods","depth":1},{"value":"Applying annotations.","url":"#applying-annotations","depth":1},{"value":"Local records","url":"#local-records","depth":2}],"frontMatter":{"readingTime":{"text":"7 min read","minutes":6.285,"time":377100,"words":1257},"slug":"2020/what-are-java-records-in-java-16","fileName":"2020/what-are-java-records-in-java-16.md","title":"What are Java Records","author":"Amrut Prabhu","categories":"","tags":["Spring Boot","Java"],"image":"java-records/java-records-title.jpg","photo-credits":"https://unsplash.com/photos/3vXOHr_fMi8","applaud-link":"java-16-records.json","date":"2021-05-27T00:00:00.000Z","draft":false,"summary":"Here we look into What are Java Record and its uses","imageUrl":"/static/images/2021/java-records/java-records-title.jpg","actualUrl":"2020/what-are-java-records-in-java-16","customUrl":"what-are-java-records-in-java-16"}},"authorDetails":[{"readingTime":{"text":"1 min read","minutes":0.875,"time":52500,"words":175},"slug":["default"],"fileName":"default.md","name":"Amrut Prabhu","avatar":"/static/images/avatar-small.jpg","avatarBig":"/static/images/avatar-big.jpg","occupation":"Staff Engineer","company":"Personal","email":"address@yoursite.com","twitter":"https://twitter.com/amrutprabhu42","linkedin":"https://www.linkedin.com/in/amrut-prabhu-722baa65/","github":"https://github.com/amrutprabhu","customUrl":"default","actualUrl":"default","date":null}],"prev":{"title":"Kind - A New Kubernetes Cluster","author":"Amrut Prabhu","categories":"","tags":["kubernetes","Java"],"image":"kind/kind-kubernetes.png","photo-credits":null,"applaud-link":"kind-kubernetes-cluster.json","date":"2021-05-13T00:00:00.000Z","draft":false,"summary":"Here we explore how to create a kubernetes cluster on your local machine","imageUrl":"/static/images/2021/kind/kind-kubernetes.png","actualUrl":"2020/kind-kubernetes-cluster","customUrl":"kind-kubernetes-cluster","slug":"kind-kubernetes-cluster"},"next":{"title":"Defining Event-Driven Architectures - AsyncAPI","author":"Amrut Prabhu","categories":"","tags":["Spring Boot","Java"],"image":"asyncapi/cover.jpg","photo-credits":"https://unsplash.com/photos/w_vO_U6BUJc","applaud-link":"asyncapi-event-driven-architecture.json","date":"2021-06-15T00:00:00.000Z","draft":false,"summary":"In this article, I am going to be talking about how we can define your event-driven architectures using the AsyncAPI definition","imageUrl":"/static/images/2021/asyncapi/cover.jpg","actualUrl":"2020/defining-event-driven-achitectures-asyncapi","customUrl":"defining-event-driven-achitectures-asyncapi","slug":"defining-event-driven-achitectures-asyncapi"}},"__N_SSG":true}